name: Build and Test (feature)
on:
  push:
    branches:
      - dev
      - 'feature/*'
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'   # pin to the version you support

      - name: Cache UV
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}

      - name: Install pip & uv
        run: |
          python -m pip install --upgrade pip uv

      - name: Verify lock file is up-to-date
        run: uv lock --check

      - name: Install test dependencies (core + dev extras)
        run: uv sync --locked --group dev

      - name: Run tests
        run: |
          uv run pytest -q --maxfail=1
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Cache UV
        uses: actions/cache@v3
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('pyproject.toml', 'uv.lock') }}

      - name: Install pip & uv
        run: |
          python -m pip install --upgrade pip uv

      - name: Verify lock file is up-to-date
        run: uv lock --check

      - name: Install build-time dependencies (core + publish extras)
        run: uv sync --locked --group publish   # brings in `build` & `twine`

      - name: Build package
        run: uv run python -m build

      - name: Verify distribution artifacts exist
        run: |
          ls -l dist
          test "$(ls dist | wc -l)" -gt 0

      - name: Upload distribution artefacts
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/